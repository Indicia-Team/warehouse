dist: noble
sudo: required

branches:
  only:
  - master
  - develop

language: php

services:
  - postgresql

php:
  # Test oldest and newest maintained versions.
  - '8.1.30'
  # - '8.2'

env:
  # Test oldest and newest maintained versions.
  - PGVERSION=16

addons:
  apt:
    packages:
    - postgresql-16-postgis-3
env:
  global:
  - PGPORT=5432
  - PGUSER=postgres

before_install:
  # Output info for debugging.
  - echo "$TRAVIS_PHP_VERSION"
  - phpenv version
  #- echo "$(phpenv root)"
  #- ls -l "$(phpenv root)"
  #- mkdir -p "$(phpenv root)/plugins"
  #- ls -l "$(phpenv root)/plugins"
  #- git clone https://github.com/madumlao/phpenv-aliases.git "$(phpenv root)/plugins/phpenv-aliases"
  #- ls -l "$(phpenv root)/plugins"
  #- phpenv alias "$TRAVIS_PHP_VERSION" --auto
  - phpenv which php
  - phpenv which composer
  - php -r "echo phpinfo();"

  # Update the package list.
  - sudo apt-get update

  # Install Apache.
  # From https://docs.travis-ci.com/user/languages/php
  # Currently Travis CI does not support mod_php for apache, but you can
  # configure php-fpm for your integration tests.
  - sudo apt-get install apache2
  # Install mod_fastcgi which is no longer available in Ubuntu repositories.
  - wget http://mirrors.kernel.org/ubuntu/pool/multiverse/liba/libapache-mod-fastcgi/libapache2-mod-fastcgi_2.4.7~0910052141-1.2_amd64.deb
  - sudo dpkg -i libapache2-mod-fastcgi_2.4.7~0910052141-1.2_amd64.deb
  # enable php-fpm
  - sudo a2enmod rewrite actions fastcgi alias
  - echo "cgi.fix_pathinfo = 1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - sudo sed -i -e "s,www-data,travis,g" /etc/apache2/envvars
  - sudo chown -R travis:travis /var/lib/apache2/fastcgi
  - ~/.phpenv/versions/$(phpenv version-name)/sbin/php-fpm
  # configure apache virtual hosts
  - sudo cp -f .travis/travis-ci-apache /etc/apache2/sites-available/000-default.conf
  - sudo sed -e "s?%TRAVIS_BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-available/000-default.conf
  - sudo service apache2 restart

install:
  # Install dependencies.
  - composer install
  # Includes a version of DbUnit that is being kept compatible with PHPUnit.
  # The original DbUnit has been abandonned. https://github.com/sebastianbergmann/dbunit

  # Grant execute on scripts
  - chmod +x .travis/postgres_setup.sh

before_script:
  - psql --version
  - pg_lsclusters
  # Create database
  - psql -d postgres -c 'create database indicia;' -U ${PGUSER} -p ${PGPORT}
  # Add extension for PostGIS
  - psql -d indicia -c "create extension postgis" -U ${PGUSER}  -p ${PGPORT}
  - psql -d indicia -c "create extension postgis_topology" -U ${PGUSER} -p ${PGPORT}
  # Add extension for btree_gin indexes.
  - psql -d indicia -c "create extension btree_gin" -U ${PGUSER} -p ${PGPORT}
  # Add extension for hstore and the audit trail.
  - psql -d indicia -c "create extension hstore" -U ${PGUSER} -p ${PGPORT}
  # Set up database.
  - .travis/postgres_setup.sh
  # Enable the phpunit module in config.php (meaning initialise() is not tested)
  - cp application/config/config.php.travis application/config/config.php
  # Provide a config file for the rest_api, spatial_index_builder and request_logging modules
  - cp modules/rest_api/config/rest.php.travis  modules/rest_api/config/rest.php
  - cp modules/spatial_index_builder/config/spatial_index_builder.php.travis  modules/spatial_index_builder/config/spatial_index_builder.php
  - cp modules/request_logging/config/request_logging.example.php modules/request_logging/config/request_logging.php

script:
  - vendor/phpunit/phpunit/phpunit --stderr --configuration phpunit-config-test.xml
  - vendor/phpunit/phpunit/phpunit --stderr --configuration phpunit-setup-check-test.xml
  - vendor/phpunit/phpunit/phpunit --stderr --configuration phpunit-home-test.xml
  # Repeat to upgrade modules
  - vendor/phpunit/phpunit/phpunit --stderr --configuration phpunit-home-test.xml
  - vendor/phpunit/phpunit/phpunit --stderr --configuration phpunit-tests.xml

after_script:
  - cat application/logs/*
